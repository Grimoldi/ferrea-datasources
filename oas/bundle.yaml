openapi: 3.0.0
info:
  title: Datasourcers API
  description: |
    # Ferrea Datasource
    This microservice expose an API that allows external datasources to be integrated with Ferrea.
    Given an ISBN, it gather information from multiple source, in order to import them in the application.
  version: 1.0.0
  contact:
    name: Eugenio Grimoldi
    url: https://github.com/Grimoldi/ferrea-datasources
  license:
    name: MIT licence
    url: https://mit-license.org/
servers:
  - url: https://ferrea.local
    description: Development local server
tags:
  - name: books
    description: Book related operations.
  - name: probes
    description: internal probes.
paths:
  /api/v1/books/{isbn}:
    parameters:
      - in: path
        name: isbn
        required: true
        schema:
          type: string
    get:
      description: Search data externally for a single book.
      security: []
      summary: Returns the data found on the external datasources for a specific book, idetified by its ISBN.
      tags:
        - book
      operationId: getBookDatasource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDatasource'
  /_/health:
    get:
      description: Verify the webserver's dependencies health.
      security: []
      summary: Returns if the webserver is able to engage on its dependencies or not.
      tags:
        - probe
      operationId: getLivenessProbe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probe'
        '503':
          description: Service unavailable. At least one of its dependencies is unhealthy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probe'
  /_/ready:
    get:
      description: Verify the webserver health.
      security: []
      summary: Returns if the webserver is healthy or not.
      tags:
        - probe
      operationId: getHealthProbe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probe'
        '503':
          description: Service unavailable. The webserver is not started yet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probe'
components:
  schemas:
    BookDatasource:
      type: object
      properties:
        items:
          type: integer
          minimum: 0
          exclusiveMinimum: false
        result:
          type: array
          minItems: 0
          items:
            type: object
            properties:
              title:
                type: string
              author:
                type: array
                items:
                  type: string
              publishing:
                type: string
              published_on:
                type: integer
                minimum: 0
                exclusiveMinimum: false
              cover:
                type: string
                format: uri
              plot:
                type: string
              language:
                type: array
                items:
                  type: string
              book_format:
                type: string
              author_portrait:
                type: array
                items:
                  type: string
                  format: uri
    ValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              loc:
                type: array
                items:
                  type: string
              msg:
                type: string
              input:
                type: string
                nullable: true
            required:
              - type
              - loc
              - msg
              - input
      required:
        - detail
      additionalProperties: false
    Probe:
      type: object
      required:
        - status
        - entities
      properties:
        status:
          type: string
          enum:
            - healthy
            - unhealthy
        entities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              status:
                type: string
                enum:
                  - healthy
                  - unhealthy
            required:
              - name
              - status
